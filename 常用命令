#telnet 10.20.0.1 18083  #测试这个IP地址和端口的链接是否能访问通


压缩：tar -cvf 文件夹.tar 文件夹
解压：tar -xvf 文件夹.tar
上述参数中加上z是针对.tar.gz文件进行解压缩


#git创建本地分支对应远程分支并且切换分支用法
#查看所有的分支，包括远程和本地的
$git branch -a

$git checkout -b v0.9rc1 origin/v0.9rc1
Branch v0.9rc1 set up to track remote branch v0.9rc1 from origin.
Switched to a new branch 'v0.9rc1'
#已经切换到v0.9rc1分支了
$git branch
  master
* v0.9rc1

＃切换回master分支
$git checkout master
Switched to branch 'master'
Your branch is up-to-date with 'origin/master'.

回滚到某个commit之前的版本
#git reset --hard $commit-number


linux下/etc/passwd目录下存放的是系统的用户名信息，每一行内容存放一个用户的信息，每个用户信息有7部分组成
root:x:0:0:root:/root:/bin/bash
root        用户名     　　  用户登录系统时使用的用户名
x             密码         　　 密码位
2             UID        　　  用户标识号
2             GID     　　     缺省组标识
root     注释性描述  　　  例如存放用户全名等信息
/root         宿主目录       用户登录系统后的缺省目录
/bin/bash   命令解释器    用户使用的Shell ,默认为bash

UID 
关于上面的UID这里细说一下，其实决定用户是什么权限，是由UID号决定的。
linux用户分为三种：
超级用户：（root   UID=0）
普通用户： （UID 500~60000）
伪用户：  （UID  1~499）
所以，可以修改用户的UID号来修改用户的类型，如果把root的UID号为500，那么root就变成了普通用户，如果把fnngj用户的UID改为0,那么它就拥有了root用户的超能力。
[root@localhost ~]#  vi   /etc/passwd   进入之后修改，完了保存退出就OK了。
伪用户
说到用户种类，又牵扯到一个伪用户，那么伪用户是干什么用的？
1、伪用户与系统和程序服务相关。
bin、daemon、shutdown、halt等，任何Linux系统默认都有这些伪用户。
mail、news、games、apache、ftp、mysql及sshd等，与linux系统的进程相关。

linux下/etc/shadow下存放的是用户的密码。该文件的权限必须设置为：-r- — — （400）或者 -rw — —（600） 
即：Linux /etc/shadow文件是只有系统管理员才有权利进行查看和修改的文件。
/etc/shadow文件中的记录行与/etc/passwd中的一一对应，它由pwconv命令根据/etc/passwd中的数据自动产生。
它的文件格式与/etc/passwd类似，由若干个字段组成，字段之间用“:”隔开。这些字段是：
登录名:加密口令:最后一次修改时间:最小时间间隔:最大时间间隔:警告时间:不活动时间:失效时间:标志
1）“登录名”是与/etc/passwd文件中的登录名相一致的用户账号
2）“口令”字段存放的是加密后的用户口令字，如果为空，则对应用户没有口令，登录时不需要口令；   
星号代表帐号被锁定；
双叹号表示这个密码已经过期了。
$6$开头的，表明是用SHA-512加密的，
$1$ 表明是用MD5加密的
$2$ 是用Blowfish加密的
$5$ 是用 SHA-256加密的。
3）“最后一次修改时间”表示的是从某个时刻起，到用户最后一次修改口令时的天数。时间起点对不同的系统可能不一样。例如在SCOLinux中，这个时间起点是1970年1月1日。
4）“最小时间间隔”指的是两次修改口令之间所需的最小天数。
5）“最大时间间隔”指的是口令保持有效的最大天数。
6）“警告时间”字段表示的是从系统开始警告用户到用户密码正式失效之间的天数。
7）“不活动时间”表示的是用户没有登录活动但账号仍能保持有效的最大天数。
8）“失效时间”字段给出的是一个绝对的天数，如果使用了这个字段，那么就给出相应账号的生存期。期满后，该账号就不再是一个合法的账号，也就不能再用来登陆了。



通过ironic-python-agent来创建coreos deploy image的大体步骤：

1：A docker build is performed using the Dockerfile in the root of the ironic-python-agent project.
2：The resulting docker image is exported to a filesystem image.
3：The filesystem image, along with a cloud-config.yml [2], are embedded into the CoreOS PXE image at /usr/share/oem/.
4：On boot, the ironic-python-agent filesystem image is extracted and run inside a systemd-nspawn container. /usr/share/oem is mounted into this container as /mnt.







git checkout -- xxxx    取消缓存区的修改
